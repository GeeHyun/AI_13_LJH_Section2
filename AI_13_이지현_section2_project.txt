[1]
안녕하십니까, 이번 프로젝트 책임자 이지현입니다.
프로젝트의 주제는 어플리케이션 사용자 중 누가 멤버십에 가입할까? 였습니다.

[2] 
저희 회사는 고객이 제공한 데이터로 빅데이터 분석을 진행하여 고객에게 그 결과를 제공합니다.
이번 고객님은 어플리케이션 운영자로 어플리케이션 이용자들이 방문한 스크린 리스트가 담긴 데이터를 제공해주셨습니다.
또한 멤버십에 가입하지 않을 것 같은 사용자를 분석하여 마케팅 방안을 마련하고 싶다고 말씀하셨습니다.

[3]
이러한 문제를 해결하기 위해 진행한 프로젝트의 과정을 다음과 같은 순서로 말씀드리려고 합니다. 먼저, 이번 고객님의 특이사항을 살펴보고, 머신러닝을 이용한 분석 과정을 간략하게 소개한 뒤, 분석 결과를 해석하는 방법을 보여드리겠습니다. 마무리는 이번 프로젝트에서 아쉬웠던 점을 언급하려고 합니다.

[4]
먼저 분석을 부탁하신 고객님의 요청사항 중 특이한 점이 두가지 있었는데요,
첫번째는 바로 고객님이 운영하시는 어플리케이션에 대한 정보를 비공개하셨다는 점입니다.
따라서 일부 스크린의 이름 또한 비공개하셨고, 이러한 특징을 살리기 위해 비공개 된 부분을 고려한 특성을 추가할 필요가 있었습니다.

두번째는 바로 고객님께서 분석을 요청하신 목적이 마케팅 비용을 최소화하기 위함이라는 것입니다. 멤버십에 가입하지 않을 것으로 예상되는 어플사용자를 대상으로 마케팅을 진행하실 예정이기 때문에, 마케팅 대상이 될 사용자, 즉, 멤버십에 가입하지 않을 것으로 예상되는 어플 사용자에 대한 추가 분석이 필요했습니다.

[5]
본격적으로 분석 과정을 말씀드리기에 앞서, 이해를 돕고자 머신러닝의 간단한 순서도를 가져왔습니다.
먼저 주어진 로우 데이터를 트레인과 테스트로 나눈 후 트레인 데이터만을 학습에 사용하여 모델을 만듭니다. 그 후 최종적으로 테스트 데이터를 사용하여 모델을 평가합니다. 이 때 최종 평가에만 사용되어야 하는 테스트 데이터가 최종 평가 전에 모델에 영향을 끼치는 문제를 데이터 리키지라고 하며 좋은 모델을 위해서는 이를 방지할 필요가 있습니다.

[6]
주어진 데이터에는 다음과 같은 변수들이 존재했습니다.
핵심 특성인 screen_list에는 말 그대로 유저가 본 스크린이 목록으로 제시되어 있었는데, 이 스크린들을 각각의 특성으로 전환하여, 해당 스크린을 봤는지 여부를 알려주는 특성으로 만들었습니다.
enrolled는유저가 멤버십에 가입했는지 여부를 알려주므로 target값으로 정하고,
enrolled_date는 가입한 유저만 값이 존재하기 때문에 데이터 리키지를 방지하기 위해 제거했습니다.


[7]
고객님의 첫번째 특이사항이었던 고객 정보의 부족은 주어진 데이터에서 확인할 수 있었는데요, screen_list 특성에 제공된 스크린의 수와 numscreen 특성에 제공된 스크린 수가 일치하지 않은 경우가 있었고, 이러한 경우를 unknown screen이라는 특성으로 추가했습니다.

[8]
또한 앞서 말씀드렸듯이 screen_list에 제공된 스크린을 새로운 특성으로 추가하여,
고객이 해당 스크린을 방문했는지 여부를 알 수 있게 했는데,
특성의 수가 너무 많아지는 문제가 생겨, 방문율이 10%보다 낮은 특성은 삭제하였습니다. 이 과정에서 train 데이터를 기준으로 남길 특성을 선정함으로써 데이터 리키지 문제를 방지할 수 있었습니다.

[6]
시각화 과정에서 제가 설정한 가설은 총 두 가지 입니다.
첫 번째는 방문한 스크린 수가 많을 수록 등록할 확률이 높다는 것입니다.
그래프를 보시면, 등록한 고객일 경우의 스크린 방문수가 전체적으로 미세하게 높아 보입니다.

[7]
두 번째는 프리미엄 상품을 이용한 고객일수록 등록할 확률이 높다는 것입니다.
그래프를 보시면, 프리미엄 상품을 이용한 고객군에서 등록한 비율이 낮습니다.

[8]
문제를 해결하기 위해서는 이진분류모델이 가장 적합해보이며, 성능지표는 ROC커브의 AUC 면적으로 해당 지표는 값이 클 수록 모델의 성능이 좋다고 할 수 있습니다. 
기준모델로는 모든 값을 최빈값으로 예측해봤는데, 정확도는 0.55였습니다.
최종 성능 확인에서도 주 성능지표인 auc_roc 외에 정확도가 이보다 개선되었는지도 확인해보겠습니다.

[9]
교차검증을 이용해 하이퍼 파라미터를 튜닝하여 모델의 일반화와 최적화 도모하여,
XGB분류, 랜덤포레스트분류, catboost분류 모델을 적용해본 결과
CatBoost 모델이 미세하지만 가장 좋은 성능을 보였습니다.

[10]
일반적으로 이진분류모델은 확률이 0.5이상이면 1, 0.5이하이면 0으로 분류하지만, 그 기준인 임계값을 0.5에서 최적의 임계값인 0.615로 조정하는 것으로 모델을 마무리했습니다.
이렇게 완성한 이번 프로젝트의 모델의 최종 점수는 0.78점으로 노멀한 수준을 보였습니다.
정확도는 ~~으로 기준모델보다 높은 수준이었습니다.

[11]
다음은 분석 결과 해석입니다.
오른쪽 그래프는 각 특성이 확률 설정에 얼마나 기여했는지를 나타내는 것이고,
왼쪽 그래프는 특성의 높낮이가 확률의 높낮이에 얼마나 기여했는지를 나타냅니다.
예를 들어 가장 위에 위치한 VerifyPhone은 가장 많은 기여를 했으며,
빨간색은 그 값이 1, 즉, 휴대폰을 변경했다는 스크린에 들어갔다는 의미이고, 0보다 우측에 분포하므로 확률을 높이는데 기여했습니다.
반대로 파란색 부분은 그 값이 0, 즉, 휴대폰을 변경했다는 스크린에 들어가지 않았다는 의미이고, 0보다 좌측에 분포하므로 확률을 낮추는데 기여했습니다.

[12]
이에 따라 가설 1을 검증하자면, 두 변수에는 어느정도 상관관계가 있어 보입니다.

[13]
가설 2를 검증하자면, 두 변수에는 상관관계가 있지 않아보입니다.

[14]
Loan, ProfilePage, unknown_screen을 방문한 유저의 경우 멤버십에 가입할 확률이 줄어드는 것이 확인되었기 때문에, 해당 페이지에 멤버십을 유도하는 버튼을 추가하는 등의 마케팅이 필요할 것이라고 생각합니다.

[15]
개별 user의 예측 확률에 대한 결과지를 고객님께 드렸는데, 해석하는 방법을 알려드릴까 합니다.
이 두 user는 멤버십에 가입할 확률이 0.1 이하입니다. 두 유저에서 공통적으로 아래에 제시된 특성이 발견되었기 때문에, 비슷한 특성을 가진 유저가 등장하면 집중 마케팅이 필요할 것으로 예상됩니다.

[16]
이번 프로젝트에서는 고객 정보와 유저 정보가 부족했다는 점, 그리고 비용 상의 문제로 회귀 분석이 생략되었다는 점이 아쉬운 점이라고 생각합니다.

[17]
들어주셔서 감사합니다.